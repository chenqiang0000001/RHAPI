{"uid":"b8a5de90641d6fee","name":"创建重复车间","fullName":"TestCase.functional_tests.test_factory_modeling.test_plant_layout.TestPlantLayout#test_storeOrganizationStructureData02","historyId":"f2c70676fc1094dfadda1c2d62b747ac","time":{"start":1751353414616,"stop":1751353416070,"duration":1454},"description":"使用重复的信息创建车间，创建失败","descriptionHtml":"<p>使用重复的信息创建车间，创建失败</p>\n","status":"failed","statusMessage":"AssertionError: assert '数据保存成功' in ['不能在具有唯一索引\"OrganizationStructureCode\"的对象\"dbo.FactoryLayout_OrganizationStructure\"中插入重复键的行。重复键值为 (Automation01)。\\r\\n语句已终止。', '车间编码不能重复', '已有重复数据录入!']","statusTrace":"self = <TestCase.functional_tests.test_factory_modeling.test_plant_layout.TestPlantLayout object at 0x0000019CF640FA50>\n\n    @pytest.mark.run(order=2)\n    @grade_3\n    @allure.title(\"创建重复车间\")\n    @allure.description(\"使用重复的信息创建车间，创建失败\")\n    def test_storeOrganizationStructureData02(self):\n        with allure.step(\"不可重复创建车间\"):\n            res = FactoryModel().storeOrganizationStructureData(OrganizationStructureCode=self.OrganizationStructureCode)\n            resBody = res.json()\n        logger.info(f\"本用例正在执行：test_storeOrganizationStructureData02。获取到的结果是：{resBody['Message']}\")\n        assert res.status_code == 200\n>       assert resBody['Message'] in [\"不能在具有唯一索引\\\"OrganizationStructureCode\\\"的对象\\\"dbo.FactoryLayout_OrganizationStructure\\\"中插入重复键的行。重复键值为 (Automation01)。\\r\\n语句已终止。\", \"车间编码不能重复\", \"已有重复数据录入!\"]\nE       assert '数据保存成功' in ['不能在具有唯一索引\"OrganizationStructureCode\"的对象\"dbo.FactoryLayout_OrganizationStructure\"中插入重复键的行。重复键值为 (Automation01)。\\r\\n语句已终止。', '车间编码不能重复', '已有重复数据录入!']\n\nTestCase\\functional_tests\\test_factory_modeling\\test_plant_layout.py:44: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_class_fixture_TestPlantLayout","time":{"start":1751353399907,"stop":1751353414614,"duration":14707},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"description":"使用重复的信息创建车间，创建失败","status":"failed","statusMessage":"AssertionError: assert '数据保存成功' in ['不能在具有唯一索引\"OrganizationStructureCode\"的对象\"dbo.FactoryLayout_OrganizationStructure\"中插入重复键的行。重复键值为 (Automation01)。\\r\\n语句已终止。', '车间编码不能重复', '已有重复数据录入!']","statusTrace":"self = <TestCase.functional_tests.test_factory_modeling.test_plant_layout.TestPlantLayout object at 0x0000019CF640FA50>\n\n    @pytest.mark.run(order=2)\n    @grade_3\n    @allure.title(\"创建重复车间\")\n    @allure.description(\"使用重复的信息创建车间，创建失败\")\n    def test_storeOrganizationStructureData02(self):\n        with allure.step(\"不可重复创建车间\"):\n            res = FactoryModel().storeOrganizationStructureData(OrganizationStructureCode=self.OrganizationStructureCode)\n            resBody = res.json()\n        logger.info(f\"本用例正在执行：test_storeOrganizationStructureData02。获取到的结果是：{resBody['Message']}\")\n        assert res.status_code == 200\n>       assert resBody['Message'] in [\"不能在具有唯一索引\\\"OrganizationStructureCode\\\"的对象\\\"dbo.FactoryLayout_OrganizationStructure\\\"中插入重复键的行。重复键值为 (Automation01)。\\r\\n语句已终止。\", \"车间编码不能重复\", \"已有重复数据录入!\"]\nE       assert '数据保存成功' in ['不能在具有唯一索引\"OrganizationStructureCode\"的对象\"dbo.FactoryLayout_OrganizationStructure\"中插入重复键的行。重复键值为 (Automation01)。\\r\\n语句已终止。', '车间编码不能重复', '已有重复数据录入!']\n\nTestCase\\functional_tests\\test_factory_modeling\\test_plant_layout.py:44: AssertionError","steps":[{"name":"不可重复创建车间","time":{"start":1751353414617,"stop":1751353416069,"duration":1452},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"attachments":[{"uid":"d00e54e9ea85245c","name":"log","source":"d00e54e9ea85245c.txt","type":"text/plain","size":1534},{"uid":"8dbe93dcbb44348","name":"stderr","source":"8dbe93dcbb44348.txt","type":"text/plain","size":11867}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"_xunit_setup_class_fixture_TestPlantLayout::0","time":{"start":1751353416083,"stop":1751353416083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"车间布局相关模块"},{"name":"tag","value":"grade_3"},{"name":"tag","value":"run(order=2)"},{"name":"parentSuite","value":"TestCase.functional_tests.test_factory_modeling"},{"name":"suite","value":"test_plant_layout"},{"name":"subSuite","value":"TestPlantLayout"},{"name":"host","value":"DESKTOP-520CACV"},{"name":"thread","value":"8020-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.functional_tests.test_factory_modeling.test_plant_layout"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["run(order=2)","grade_3"]},"source":"b8a5de90641d6fee.json","parameterValues":[]}