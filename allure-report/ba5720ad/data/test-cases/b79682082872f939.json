{"uid":"b79682082872f939","name":"新增车间","fullName":"TestCase.integration_tests.test_mainprocess.TestMainProcess#test_21_add_workshop","historyId":"20102ef76f434fe5fbbab057ec8ed3fe","time":{"start":1751855378217,"stop":1751855378246,"duration":29},"description":"新增车间，期望新增成功","descriptionHtml":"<p>新增车间，期望新增成功</p>\n","status":"failed","statusMessage":"AssertionError: 期望Success=True，实际为False\nassert False == True","statusTrace":"self = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000018BEF4AE850>\n\n    @allure.title(\"新增车间\")\n    @allure.description(\"新增车间，期望新增成功\")\n    def test_21_add_workshop(self):\n        with allure.step(\"调用接口新增车间\"):\n            response = self.factory_model.storeOrganizationStructureData()\n        try:\n            assert response is not None, \"storeOrganizationStructureData接口返回None\"\n            assert response.status_code == 200, f\"期望状态码200，实际为{response.status_code}\"\n            response_body = response.json()\n            assert response_body['Success'] == True, f\"期望Success=True，实际为{response_body['Success']}\"\n        except AssertionError as e:\n            self.logger.error(f\"新增车间失败：{e}\")\n>           raise e\n\nTestCase\\integration_tests\\test_mainprocess.py:491: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000018BEF4AE850>\n\n    @allure.title(\"新增车间\")\n    @allure.description(\"新增车间，期望新增成功\")\n    def test_21_add_workshop(self):\n        with allure.step(\"调用接口新增车间\"):\n            response = self.factory_model.storeOrganizationStructureData()\n        try:\n            assert response is not None, \"storeOrganizationStructureData接口返回None\"\n            assert response.status_code == 200, f\"期望状态码200，实际为{response.status_code}\"\n            response_body = response.json()\n>           assert response_body['Success'] == True, f\"期望Success=True，实际为{response_body['Success']}\"\nE           AssertionError: 期望Success=True，实际为False\nE           assert False == True\n\nTestCase\\integration_tests\\test_mainprocess.py:488: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_and_teardown","time":{"start":1751855327001,"stop":1751855375775,"duration":48774},"status":"passed","steps":[{"name":"前置条件：清理测试数据残留","time":{"start":1751855327002,"stop":1751855348811,"duration":21809},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":1,"attachmentStep":false}],"testStage":{"description":"新增车间，期望新增成功","status":"failed","statusMessage":"AssertionError: 期望Success=True，实际为False\nassert False == True","statusTrace":"self = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000018BEF4AE850>\n\n    @allure.title(\"新增车间\")\n    @allure.description(\"新增车间，期望新增成功\")\n    def test_21_add_workshop(self):\n        with allure.step(\"调用接口新增车间\"):\n            response = self.factory_model.storeOrganizationStructureData()\n        try:\n            assert response is not None, \"storeOrganizationStructureData接口返回None\"\n            assert response.status_code == 200, f\"期望状态码200，实际为{response.status_code}\"\n            response_body = response.json()\n            assert response_body['Success'] == True, f\"期望Success=True，实际为{response_body['Success']}\"\n        except AssertionError as e:\n            self.logger.error(f\"新增车间失败：{e}\")\n>           raise e\n\nTestCase\\integration_tests\\test_mainprocess.py:491: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000018BEF4AE850>\n\n    @allure.title(\"新增车间\")\n    @allure.description(\"新增车间，期望新增成功\")\n    def test_21_add_workshop(self):\n        with allure.step(\"调用接口新增车间\"):\n            response = self.factory_model.storeOrganizationStructureData()\n        try:\n            assert response is not None, \"storeOrganizationStructureData接口返回None\"\n            assert response.status_code == 200, f\"期望状态码200，实际为{response.status_code}\"\n            response_body = response.json()\n>           assert response_body['Success'] == True, f\"期望Success=True，实际为{response_body['Success']}\"\nE           AssertionError: 期望Success=True，实际为False\nE           assert False == True\n\nTestCase\\integration_tests\\test_mainprocess.py:488: AssertionError","steps":[{"name":"调用接口新增车间","time":{"start":1751855378218,"stop":1751855378245,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"attachments":[{"uid":"2be69000dd227e83","name":"log","source":"2be69000dd227e83.txt","type":"text/plain","size":128},{"uid":"22b58a0d3069afad","name":"stderr","source":"22b58a0d3069afad.txt","type":"text/plain","size":142}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":1,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"主流程集成测试"},{"name":"parentSuite","value":"TestCase.integration_tests"},{"name":"suite","value":"test_mainprocess"},{"name":"subSuite","value":"TestMainProcess"},{"name":"host","value":"DESKTOP-520CACV"},{"name":"thread","value":"2020-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.integration_tests.test_mainprocess"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"b79682082872f939.json","parameterValues":[]}