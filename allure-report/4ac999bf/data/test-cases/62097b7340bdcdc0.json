{"uid":"62097b7340bdcdc0","name":"查询物料","fullName":"TestCase.integration_tests.test_mainprocess.TestMainProcess#test_02_inquire_about_materials","historyId":"774ec9e4738270a92aaad39ecac9fb44","time":{"start":1751855138406,"stop":1751855140506,"duration":2100},"description":"查询已创建的物料，提取物料ID","descriptionHtml":"<p>查询已创建的物料，提取物料ID</p>\n","status":"failed","statusMessage":"AssertionError: getMaterialInfoAutoQueryDatas接口返回None，请检查接口或依赖服务是否正常\nassert None is not None","statusTrace":"self = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000026366AF5690>\n\n    @allure.title(\"查询物料\")\n    @allure.description(\"查询已创建的物料，提取物料ID\")\n    def test_02_inquire_about_materials(self):\n        with allure.step(\"调用接口查询物料\"):\n            response = self.product_materials.getMaterialInfoAutoQueryDatas()\n        try:\n            assert response is not None, \"getMaterialInfoAutoQueryDatas接口返回None，请检查接口或依赖服务是否正常\"\n            assert response.status_code == 200, f\"期望状态码200，实际为{response.status_code}\"\n            response_body = response.json()\n            assert response_body['Success'] == True, f\"期望Success=True，实际为{response_body['Success']}\"\n            if response_body.get('Attach') and len(response_body['Attach']) > 0:\n                TestMainProcess.material_id = response_body['Attach'][0]['Id']\n        except AssertionError as e:\n            self.logger.error(f\"查询物料失败：{e}\")\n>           raise e\n\nTestCase\\integration_tests\\test_mainprocess.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000026366AF5690>\n\n    @allure.title(\"查询物料\")\n    @allure.description(\"查询已创建的物料，提取物料ID\")\n    def test_02_inquire_about_materials(self):\n        with allure.step(\"调用接口查询物料\"):\n            response = self.product_materials.getMaterialInfoAutoQueryDatas()\n        try:\n>           assert response is not None, \"getMaterialInfoAutoQueryDatas接口返回None，请检查接口或依赖服务是否正常\"\nE           AssertionError: getMaterialInfoAutoQueryDatas接口返回None，请检查接口或依赖服务是否正常\nE           assert None is not None\n\nTestCase\\integration_tests\\test_mainprocess.py:122: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_and_teardown","time":{"start":1751855052350,"stop":1751855136224,"duration":83874},"status":"passed","steps":[{"name":"前置条件：清理测试数据残留","time":{"start":1751855052350,"stop":1751855110202,"duration":57852},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":1,"hasContent":true}],"testStage":{"description":"查询已创建的物料，提取物料ID","status":"failed","statusMessage":"AssertionError: getMaterialInfoAutoQueryDatas接口返回None，请检查接口或依赖服务是否正常\nassert None is not None","statusTrace":"self = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000026366AF5690>\n\n    @allure.title(\"查询物料\")\n    @allure.description(\"查询已创建的物料，提取物料ID\")\n    def test_02_inquire_about_materials(self):\n        with allure.step(\"调用接口查询物料\"):\n            response = self.product_materials.getMaterialInfoAutoQueryDatas()\n        try:\n            assert response is not None, \"getMaterialInfoAutoQueryDatas接口返回None，请检查接口或依赖服务是否正常\"\n            assert response.status_code == 200, f\"期望状态码200，实际为{response.status_code}\"\n            response_body = response.json()\n            assert response_body['Success'] == True, f\"期望Success=True，实际为{response_body['Success']}\"\n            if response_body.get('Attach') and len(response_body['Attach']) > 0:\n                TestMainProcess.material_id = response_body['Attach'][0]['Id']\n        except AssertionError as e:\n            self.logger.error(f\"查询物料失败：{e}\")\n>           raise e\n\nTestCase\\integration_tests\\test_mainprocess.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000026366AF5690>\n\n    @allure.title(\"查询物料\")\n    @allure.description(\"查询已创建的物料，提取物料ID\")\n    def test_02_inquire_about_materials(self):\n        with allure.step(\"调用接口查询物料\"):\n            response = self.product_materials.getMaterialInfoAutoQueryDatas()\n        try:\n>           assert response is not None, \"getMaterialInfoAutoQueryDatas接口返回None，请检查接口或依赖服务是否正常\"\nE           AssertionError: getMaterialInfoAutoQueryDatas接口返回None，请检查接口或依赖服务是否正常\nE           assert None is not None\n\nTestCase\\integration_tests\\test_mainprocess.py:122: AssertionError","steps":[{"name":"调用接口查询物料","time":{"start":1751855138407,"stop":1751855140504,"duration":2097},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[{"uid":"93af9181cf8b78aa","name":"log","source":"93af9181cf8b78aa.txt","type":"text/plain","size":1187},{"uid":"9b44822d5ada219e","name":"stderr","source":"9b44822d5ada219e.txt","type":"text/plain","size":3245}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"主流程集成测试"},{"name":"parentSuite","value":"TestCase.integration_tests"},{"name":"suite","value":"test_mainprocess"},{"name":"subSuite","value":"TestMainProcess"},{"name":"host","value":"DESKTOP-520CACV"},{"name":"thread","value":"15080-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.integration_tests.test_mainprocess"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"62097b7340bdcdc0.json","parameterValues":[]}