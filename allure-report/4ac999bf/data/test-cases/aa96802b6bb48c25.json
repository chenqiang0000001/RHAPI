{"uid":"aa96802b6bb48c25","name":"查询派工单","fullName":"TestCase.integration_tests.test_mainprocess.TestMainProcess#test_31_query_dispatch_order","historyId":"cb97e5b5c216a779368f27bed6a0dca0","time":{"start":1751855165591,"stop":1751855166542,"duration":951},"description":"查询已创建的派工单，提取派工单号","descriptionHtml":"<p>查询已创建的派工单，提取派工单号</p>\n","status":"failed","statusMessage":"AssertionError: assert False == True","statusTrace":"self = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000026366B0A650>\n\n    @allure.title(\"查询派工单\")\n    @allure.description(\"查询已创建的派工单，提取派工单号\")\n    def test_31_query_dispatch_order(self):\n        \"\"\"查询派工单\"\"\"\n        self.logger.info(\"===== 开始查询派工单 =====\")\n        assert TestMainProcess.production_plan_code, \"缺少生产计划单号\"\n    \n        with allure.step(\"查询派工单列表\"):\n            dispatch_query_body = {\n                \"ProductionDispatchCode\": \"\",\n                \"BindProductionDispatchCode\": \"\",\n                \"ProcessTaskCode\": \"\",\n                \"ProductionPlanCode\": TestMainProcess.production_plan_code,\n                \"ProcessCode\": None,\n                \"ProcessName\": \"\",\n                \"EquipmentCode\": None,\n                \"EquipmentName\": \"\",\n                \"MouldCode\": None,\n                \"MouldName\": \"\",\n                \"ProductCode\": None,\n                \"ProductName\": \"\",\n                \"IsPaged\": True,\n                \"PageSize\": 10,\n                \"PageIndex\": 1,\n                \"CompanyCode\": fm.CompanyCode,\n                \"FactoryCode\": \"00000.00001\"\n            }\n            dispatch_query_resp = self.PS.getProductionDispatchOrderAutoQueryDatas(dispatch_query_body)\n            assert dispatch_query_resp is not None, \"getProductionDispatchOrderAutoQueryDatas接口返回None\"\n            assert dispatch_query_resp.status_code == 200\n            data = dispatch_query_resp.json()\n>           assert data['Success'] == True\nE           assert False == True\n\nTestCase\\integration_tests\\test_mainprocess.py:807: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_and_teardown","time":{"start":1751855052350,"stop":1751855136224,"duration":83874},"status":"passed","steps":[{"name":"前置条件：清理测试数据残留","time":{"start":1751855052350,"stop":1751855110202,"duration":57852},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":1,"hasContent":true}],"testStage":{"description":"查询已创建的派工单，提取派工单号","status":"failed","statusMessage":"AssertionError: assert False == True","statusTrace":"self = <TestCase.integration_tests.test_mainprocess.TestMainProcess object at 0x0000026366B0A650>\n\n    @allure.title(\"查询派工单\")\n    @allure.description(\"查询已创建的派工单，提取派工单号\")\n    def test_31_query_dispatch_order(self):\n        \"\"\"查询派工单\"\"\"\n        self.logger.info(\"===== 开始查询派工单 =====\")\n        assert TestMainProcess.production_plan_code, \"缺少生产计划单号\"\n    \n        with allure.step(\"查询派工单列表\"):\n            dispatch_query_body = {\n                \"ProductionDispatchCode\": \"\",\n                \"BindProductionDispatchCode\": \"\",\n                \"ProcessTaskCode\": \"\",\n                \"ProductionPlanCode\": TestMainProcess.production_plan_code,\n                \"ProcessCode\": None,\n                \"ProcessName\": \"\",\n                \"EquipmentCode\": None,\n                \"EquipmentName\": \"\",\n                \"MouldCode\": None,\n                \"MouldName\": \"\",\n                \"ProductCode\": None,\n                \"ProductName\": \"\",\n                \"IsPaged\": True,\n                \"PageSize\": 10,\n                \"PageIndex\": 1,\n                \"CompanyCode\": fm.CompanyCode,\n                \"FactoryCode\": \"00000.00001\"\n            }\n            dispatch_query_resp = self.PS.getProductionDispatchOrderAutoQueryDatas(dispatch_query_body)\n            assert dispatch_query_resp is not None, \"getProductionDispatchOrderAutoQueryDatas接口返回None\"\n            assert dispatch_query_resp.status_code == 200\n            data = dispatch_query_resp.json()\n>           assert data['Success'] == True\nE           assert False == True\n\nTestCase\\integration_tests\\test_mainprocess.py:807: AssertionError","steps":[{"name":"查询派工单列表","time":{"start":1751855165592,"stop":1751855166541,"duration":949},"status":"failed","statusMessage":"AssertionError: assert False == True\n","statusTrace":"  File \"D:\\apiAutomationRH\\TestCase\\integration_tests\\test_mainprocess.py\", line 807, in test_31_query_dispatch_order\n    assert data['Success'] == True\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"2a552bd4eb548172","name":"log","source":"2a552bd4eb548172.txt","type":"text/plain","size":731},{"uid":"b0f1dec1e9cb40e6","name":"stderr","source":"b0f1dec1e9cb40e6.txt","type":"text/plain","size":762}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"主流程集成测试"},{"name":"parentSuite","value":"TestCase.integration_tests"},{"name":"suite","value":"test_mainprocess"},{"name":"subSuite","value":"TestMainProcess"},{"name":"host","value":"DESKTOP-520CACV"},{"name":"thread","value":"15080-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.integration_tests.test_mainprocess"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"aa96802b6bb48c25.json","parameterValues":[]}